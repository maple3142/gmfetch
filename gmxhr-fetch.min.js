((a,b)=>{a.gmfetch=b("undefined"==typeof GM?{}:GM)})(this,a=>{if("undefined"==typeof GM_xmlhttpRequest&&"undefined"==typeof a.xmlHttpRequest)throw new Error("Either GM_xmlhttpRequest or GM.xmlHttpRequest must exists!");"function"!=typeof GM_xmlhttpRequest||a.xmlHttpRequest||(a.xmlHttpRequest=GM_xmlhttpRequest);const b=a=>{const b=a.indexOf(":");return[a.slice(0,b),a.slice(b+1).trimLeft()]},c=a=>Object.fromEntries(a.split("\r\n").filter(Boolean).map(b)),d=(b,e={})=>b instanceof Request?d(b.url,Object.assign({},b,e)):new Promise(d=>{e.headers instanceof Headers&&(e.headers=fromEntries(Array.from(e.headers.entries()))),e.data=e.body,e=Object.assign({method:"GET",headers:{}},e,{url:b,responseType:"blob"}),a.xmlHttpRequest(Object.assign({},e,{onload:a=>{a.headers=c(a.responseHeaders),d(new Response(a.response,Object.assign({},e,a)))},onerror:a=>{console.log("err",a),d(new Response(a.response,Object.assign({},e,a)))}}))});return d});